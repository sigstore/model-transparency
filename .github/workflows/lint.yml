# Copyright 2024 The Sigstore Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Lint

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

permissions: {}

jobs:
  whitespace-lint:
    runs-on: ubuntu-latest
    name: Lint whitespace
    permissions:
      contents: read
    steps:
      - name: Check out source repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Detect empty lines at end of file and trailing whitespace
        run: |
          set -euxo pipefail
          failed=0

          # First, check for empty files at end
          for file in $(for f in $(git ls-files --eol | grep 'i/[cr]*lf' | awk '{print $4}'); do egrep -l "^$" $file; done); do
            line=$(wc -l "$file" | cut -d ' ' -f1)
            echo "::error file=$file,line=$line::File $file has empty lines at end. Please remove."
            failed=$((failed + 1))
          done

          # Next, check for files with whitespace at end of line. Remove CRLF files.
          for file in $(git ls-files --eol | grep 'i/lf' | awk '{print $4}'); do
            for line in $(grep -n '[[:space:]]$' "$file" | cut -d: -f1); do
              echo "::error file=$file,line=$line::File $file has trailing whitespace at line $line. Please remove."
              failed=$((failed + 1))
            done
          done

          # Finally, check for missing endline at end of file, for any text file.
          for file in $(git ls-files | grep 'i/lf' | awk '{print $4}'); do
            if [[ -n "$(tail -c 1 "$file")" ]]; then
              line=$(wc -l "$file" | cut -d ' ' -f1)
              echo "::error file=$file,line=$line::File $file needs an endline at the end. Please add."
              failed=$((failed + 1))
            fi
          done

          # Report status
          if [[ $failed -ne 0 ]]; then
            echo "::error Found $failed whitespace errors, failing"
            exit 1
          fi

  pytype-lint:
    runs-on: ubuntu-latest
    name: Type Check
    permissions:
      contents: read
    steps:
      - name: Check out source repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc
      - name: Register pytype problem matcher
        run: echo "::add-matcher::$GITHUB_WORKSPACE/.github/pytype-problem-matcher.json"
      - name: Run type check
        run: hatch run type:check

  ruff-lint:
    runs-on: ubuntu-latest
    name: Python lint
    permissions:
      contents: read
    steps:
      - name: Check out source repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Hatch
        uses: pypa/hatch@257e27e51a6a5616ed08a39a408a21c35c9931bc
      - name: Run python linting
        run: hatch fmt --check
        env:
          RUFF_OUTPUT_FORMAT: github
