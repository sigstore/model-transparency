name: SLSA for ML models example
on:
  workflow_dispatch:
    inputs:
      model_type:
        description: Name of the model (implies framework)
        required: true
        type: choice
        options:
        - tensorflow_model.keras
        - tensorflow_hdf5_model.h5
        - tensorflow_hdf5.weights.h5
        - pytorch_model.pth
        - pytorch_full_model.pth
        - pytorch_jitted_model.pt
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '*.md'

permissions: read-all

defaults:
  run:
    shell: bash

jobs:
  train:
    name: Train model
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    outputs:
      hash-ubuntu-latest: ${{ steps.hash.outputs.hash-ubuntu-latest }}
      hash-macos-latest: ${{ steps.hash.outputs.hash-macos-latest }}
      hash-windows-latest: ${{ steps.hash.outputs.hash-windows-latest }}
    steps:
    - run: git config --global core.autocrlf input
    - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
    - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: 3.11
        cache: pip
        cache-dependency-path: slsa_for_models/install/requirements_${{ runner.os }}.txt
    - name: Install dependencies
      run: |
        set -exuo pipefail
        python -m venv venv
        .github/workflows/scripts/venv_activate.sh
        python -m pip install --require-hashes -r slsa_for_models/install/requirements_${{ runner.os }}.txt
    - name: Build model
      env:
        MODEL_TYPE: ${{ github.event.inputs.model_type || 'pytorch_jitted_model.pt' }}
      run: |
        set -exuo pipefail
        python -m venv venv
        .github/workflows/scripts/venv_activate.sh
        python slsa_for_models/main.py "$MODEL_TYPE"
    - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      with:
        path: ${{ github.event.inputs.model_type || 'pytorch_jitted_model.pt' }}
        name: ${{ github.event.inputs.model_type || 'pytorch_jitted_model.pt' }}_${{ runner.os }}
        if-no-files-found: error
    - id: hash
      env:
        MODEL: ${{ github.event.inputs.model_type || 'pytorch_jitted_model.pt' }}
      run: |
        set -euo pipefail
        (sha256sum -t "$MODEL" || shasum -a 256 "$MODEL") > checksum
        echo "hash-${{ matrix.os }}=$(base64 -w0 checksum || base64 checksum)" >> "${GITHUB_OUTPUT}"

  provenance:
    # TODO(mihaimaruseac): Don't run on pull requests for now
    if: ${{ github.event_name != 'pull_request' }}
    needs: [train]
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: "${{ needs.train.outputs[format('hash-{0}', matrix.os)] }}"
      upload-assets: true # NOTE: This does nothing unless 'upload-tag-name' parameter is also set to an existing tag
